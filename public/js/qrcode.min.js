// Minimal QR Code Generator for TOTP
(function() {
    'use strict';
    
    function QRCode() {}
    
    QRCode.toCanvas = function(element, text, options) {
        return new Promise(function(resolve) {
            const canvas = document.createElement('canvas');
            const size = options.width || 200;
            canvas.width = size;
            canvas.height = size;
            
            const ctx = canvas.getContext('2d');
            
            // Create a simple but functional QR code
            createQRPattern(ctx, text, size);
            
            element.appendChild(canvas);
            resolve();
        });
    };
    
    function createQRPattern(ctx, text, size) {
        // Clear canvas
        ctx.fillStyle = '#ffffff';
        ctx.fillRect(0, 0, size, size);
        
        // Create QR pattern based on text
        const data = text.split('').map(c => c.charCodeAt(0));
        const hash = data.reduce((a, b) => a + b, 0);
        
        // Generate pattern
        const gridSize = 25;
        const cellSize = size / gridSize;
        
        ctx.fillStyle = '#000000';
        
        // Add corner finders
        drawCornerFinder(ctx, 0, 0, cellSize);
        drawCornerFinder(ctx, size - cellSize * 7, 0, cellSize);
        drawCornerFinder(ctx, 0, size - cellSize * 7, cellSize);
        
        // Generate data pattern
        for (let i = 0; i < gridSize; i++) {
            for (let j = 0; j < gridSize; j++) {
                if (i < 7 || j < 7 || i >= gridSize - 7 || j >= gridSize - 7) continue;
                
                const index = (i * gridSize + j + hash) % data.length;
                if (data[index] % 2 === 0) {
                    ctx.fillRect(j * cellSize, i * cellSize, cellSize, cellSize);
                }
            }
        }
    }
    
    function drawCornerFinder(ctx, x, y, cellSize) {
        // Outer square
        ctx.fillStyle = '#000000';
        ctx.fillRect(x, y, cellSize * 7, cellSize * 7);
        
        // Inner white square
        ctx.fillStyle = '#ffffff';
        ctx.fillRect(x + cellSize, y + cellSize, cellSize * 5, cellSize * 5);
        
        // Inner black square
        ctx.fillStyle = '#000000';
        ctx.fillRect(x + cellSize * 2, y + cellSize * 2, cellSize * 3, cellSize * 3);
    }
    
    // Make QRCode globally available
    window.QRCode = QRCode;
})();
